{"ast":null,"code":"var _jsxFileName = \"/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ShowPortfolio from \"./ShowPortfolio.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [amount_invested, setAmountInvested] = useState(\"\");\n  const [price_at_purchase, setPriceAtPurchase] = useState(\"\");\n  const [date_purchased, setDatePurchased] = useState(\"\");\n  const [tokens_owned, setTokensOwned] = useState(\"\");\n  const [coins, setCoins] = useState(\"\");\n  const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = event => {\n    setTokensOwned(event.target.value);\n  };\n\n  const updateDatePurchased = event => {\n    setDatePurchased(event.target.value);\n  };\n\n  const updatePriceAtPurchase = event => {\n    setPriceAtPurchase(event.target.value);\n  };\n\n  const updateAmountInvested = event => {\n    setAmountInvested(event.target.value);\n  };\n\n  const updateName = event => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify({\n        name\n      })\n    }).then(response => response.json()).then(coin => {\n      console.log(\"after post request\", coin);\n      setCoins([...coins, coin]);\n      setForms(0);\n    }, [coins]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ShowPortfolio, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          className: \"crypto\",\n          onChange: updateName //   value={name}\n          ,\n          placeholder: \"TokenName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"usdInvested\",\n          type: \"text\",\n          className: \"crypto\",\n          onChange: updateAmountInvested,\n          placeholder: \"USD Invested\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"priceAtPurchase\",\n          type: \"text\",\n          className: \"crypto\",\n          onChange: updatePriceAtPurchase,\n          placeholder: \"Price At Purchase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"tokenAmount\",\n          type: \"text\",\n          className: \"crypto\",\n          onChange: updateTokensOwned,\n          placeholder: \"Token Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"date\",\n          type: \"text\",\n          className: \"crypto\",\n          onChange: updateDatePurchased,\n          placeholder: \"MM-DD-YYYY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Form, \"juTVWVUmNAuyrIFF/xWfNYOAMM8=\");\n\n_c = Form;\nexport default Form; // fetch(\"http://localhost:3000/api/crypto\", {\n//   mode: \"cors\",\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\": \"application.json\",\n//   },\n//   body: JSON.stringify({ name }),\n// })\n//   .then((response) => response.json())\n//   .then((token) => {\n//     console.log(\"after post request\", token);\n//     setToken([...tokens, token]);\n//   });\n//     axios({\n//       url: \"http://localhost:3000/api/crypto\",\n//       method: \"Post\",\n//       data: {\n//         name,\n//         amount_invested,\n//         price_at_purchase,\n//         date_purchased,\n//         tokens_owned,\n//       },\n//     }).then((res) => {\n//       setCoins([...coins, res.data]);\n//     });\n//     console.log(\"handlesubmit\");\n//   };\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","ShowPortfolio","Form","name","setName","amount_invested","setAmountInvested","price_at_purchase","setPriceAtPurchase","date_purchased","setDatePurchased","tokens_owned","setTokensOwned","coins","setCoins","forms","setForms","updateTokensOwned","event","target","value","updateDatePurchased","updatePriceAtPurchase","updateAmountInvested","updateName","handleSubmit","preventDefault","fetch","mode","method","headers","body","JSON","stringify","then","response","json","coin","console","log"],"sources":["/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ShowPortfolio from \"./ShowPortfolio.js\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [amount_invested, setAmountInvested] = useState(\"\");\n  const [price_at_purchase, setPriceAtPurchase] = useState(\"\");\n  const [date_purchased, setDatePurchased] = useState(\"\");\n  const [tokens_owned, setTokensOwned] = useState(\"\");\n  const [coins, setCoins] = useState(\"\");\n  const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = (event) => {\n    setTokensOwned(event.target.value);\n  };\n\n  const updateDatePurchased = (event) => {\n    setDatePurchased(event.target.value);\n  };\n\n  const updatePriceAtPurchase = (event) => {\n    setPriceAtPurchase(event.target.value);\n  };\n\n  const updateAmountInvested = (event) => {\n    setAmountInvested(event.target.value);\n  };\n\n  const updateName = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application.json\",\n      },\n      body: JSON.stringify({ name }),\n    })\n      .then((response) => response.json())\n      .then(\n        (coin) => {\n          console.log(\"after post request\", coin);\n          setCoins([...coins, coin]);\n          setForms(0);\n        },\n        [coins]\n      );\n  };\n\n  return (\n    <>\n      <ShowPortfolio />\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            className=\"crypto\"\n            onChange={updateName}\n            //   value={name}\n            placeholder=\"TokenName\"\n          />\n          <input\n            name=\"usdInvested\"\n            type=\"text\"\n            className=\"crypto\"\n            onChange={updateAmountInvested}\n            placeholder=\"USD Invested\"\n          />\n          <input\n            name=\"priceAtPurchase\"\n            type=\"text\"\n            className=\"crypto\"\n            onChange={updatePriceAtPurchase}\n            placeholder=\"Price At Purchase\"\n          />\n          <input\n            name=\"tokenAmount\"\n            type=\"text\"\n            className=\"crypto\"\n            onChange={updateTokensOwned}\n            placeholder=\"Token Amount\"\n          />\n          <input\n            name=\"date\"\n            type=\"text\"\n            className=\"crypto\"\n            onChange={updateDatePurchased}\n            placeholder=\"MM-DD-YYYY\"\n          />\n          <input type=\"submit\" id=\"submit\" />\n        </label>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n\n// fetch(\"http://localhost:3000/api/crypto\", {\n//   mode: \"cors\",\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\": \"application.json\",\n//   },\n//   body: JSON.stringify({ name }),\n// })\n//   .then((response) => response.json())\n//   .then((token) => {\n//     console.log(\"after post request\", token);\n//     setToken([...tokens, token]);\n//   });\n\n//     axios({\n//       url: \"http://localhost:3000/api/crypto\",\n//       method: \"Post\",\n//       data: {\n//         name,\n//         amount_invested,\n//         price_at_purchase,\n//         date_purchased,\n//         tokens_owned,\n//       },\n//     }).then((res) => {\n//       setCoins([...coins, res.data]);\n//     });\n//     console.log(\"handlesubmit\");\n//   };\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,eAAD,EAAkBC,iBAAlB,IAAuCP,QAAQ,CAAC,EAAD,CAArD;EACA,MAAM,CAACQ,iBAAD,EAAoBC,kBAApB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACU,cAAD,EAAiBC,gBAAjB,IAAqCX,QAAQ,CAAC,EAAD,CAAnD;EACA,MAAM,CAACY,YAAD,EAAeC,cAAf,IAAiCb,QAAQ,CAAC,EAAD,CAA/C;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMkB,iBAAiB,GAAIC,KAAD,IAAW;IACnCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,mBAAmB,GAAIH,KAAD,IAAW;IACrCR,gBAAgB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;EACD,CAFD;;EAIA,MAAME,qBAAqB,GAAIJ,KAAD,IAAW;IACvCV,kBAAkB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;EACD,CAFD;;EAIA,MAAMG,oBAAoB,GAAIL,KAAD,IAAW;IACtCZ,iBAAiB,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;EACD,CAFD;;EAIA,MAAMI,UAAU,GAAIN,KAAD,IAAW;IAC5Bd,OAAO,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;EACD,CAFD;;EAIA,MAAMK,YAAY,GAAIP,KAAD,IAAW;IAC9BA,KAAK,CAACQ,cAAN;IAEAC,KAAK,CAAC,kCAAD,EAAqC;MACxCC,IAAI,EAAE,MADkC;MAExCC,MAAM,EAAE,MAFgC;MAGxCC,OAAO,EAAE;QACP,gBAAgB;MADT,CAH+B;MAMxCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAE9B;MAAF,CAAf;IANkC,CAArC,CAAL,CAQG+B,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CAUKG,IAAD,IAAU;MACRC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC;MACAvB,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWwB,IAAX,CAAD,CAAR;MACArB,QAAQ,CAAC,CAAD,CAAR;IACD,CAdL,EAeI,CAACH,KAAD,CAfJ;EAiBD,CApBD;;EAsBA,oBACE;IAAA,wBACE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEY,YAAhB;MAAA,uBACE;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,SAAS,EAAC,QAHZ;UAIE,QAAQ,EAAED,UAJZ,CAKE;UALF;UAME,WAAW,EAAC;QANd;UAAA;UAAA;UAAA;QAAA,QADF,eASE;UACE,IAAI,EAAC,aADP;UAEE,IAAI,EAAC,MAFP;UAGE,SAAS,EAAC,QAHZ;UAIE,QAAQ,EAAED,oBAJZ;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QATF,eAgBE;UACE,IAAI,EAAC,iBADP;UAEE,IAAI,EAAC,MAFP;UAGE,SAAS,EAAC,QAHZ;UAIE,QAAQ,EAAED,qBAJZ;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QAhBF,eAuBE;UACE,IAAI,EAAC,aADP;UAEE,IAAI,EAAC,MAFP;UAGE,SAAS,EAAC,QAHZ;UAIE,QAAQ,EAAEL,iBAJZ;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QAvBF,eA8BE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,SAAS,EAAC,QAHZ;UAIE,QAAQ,EAAEI,mBAJZ;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QA9BF,eAqCE;UAAO,IAAI,EAAC,QAAZ;UAAqB,EAAE,EAAC;QAAxB;UAAA;UAAA;UAAA;QAAA,QArCF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AA8CD;;GAjGQnB,I;;KAAAA,I;AAmGT,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}