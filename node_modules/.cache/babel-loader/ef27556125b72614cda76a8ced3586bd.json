{"ast":null,"code":"var _jsxFileName = \"/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // import ShowPortfolio from \"./ShowPortfolio.js\";\n// import { tokens, setTokens } from \"./ShowPortfolio.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState({\n    name: \"\"\n  });\n  const [amount_invested, setAmountInvested] = useState({\n    amount_invested: \"\"\n  });\n  const [price_at_purchase, setPriceAtPurchase] = useState({\n    price_at_purchase: \"\"\n  });\n  const [date_purchased, setDatePurchased] = useState({\n    date_purchased: \"\"\n  });\n  const [tokens_owned, setTokensOwned] = useState({\n    tokens_owned: \"\"\n  });\n  const [coins, setCoins] = useState(\"\"); // const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = event => {\n    setTokensOwned({\n      tokens_owned: event.target.value\n    });\n  };\n\n  const updateDatePurchased = event => {\n    setDatePurchased({\n      date_purchased: event.target.value\n    });\n  };\n\n  const updatePriceAtPurchase = event => {\n    setPriceAtPurchase({\n      price_at_purchase: event.target.value\n    });\n  };\n\n  const updateAmountInvested = event => {\n    setAmountInvested({\n      amount_invested: event.target.value\n    });\n  };\n\n  const updateName = event => {\n    setName({\n      name: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify({\n        name,\n        amount_invested,\n        price_at_purchase,\n        date_purchased,\n        tokens_owned\n      })\n    }).then(response => response.json()).then(coin => {\n      console.log(\"after post request\", coin);\n      setCoins([...coins, coin.data]); //   setTokens({ id: 0 });\n    }, []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateName //   value={name}\n        ,\n        placeholder: \"TokenName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"usdInvested\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateAmountInvested,\n        placeholder: \"USD Invested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"priceAtPurchase\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updatePriceAtPurchase,\n        placeholder: \"Price At Purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"tokenAmount\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateTokensOwned,\n        placeholder: \"Token Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"date\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateDatePurchased,\n        placeholder: \"MM-DD-YYYY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"HyVJMVGzU7S54BPOQiUOXFrtMuM=\");\n\n_c = Form;\nexport default Form; // // fetch(\"http://localhost:3000/api/crypto\", {\n// //   mode: \"cors\",\n// //   method: \"POST\",\n// //   headers: {\n// //     \"Content-Type\": \"application.json\",\n// //   },\n// //   body: JSON.stringify({ name }),\n// // })\n// //   .then((response) => response.json())\n// //   .then((token) => {\n// //     console.log(\"after post request\", token);\n// //     setToken([...tokens, token]);\n// //   });\n// //     axios({\n// //       url: \"http://localhost:3000/api/crypto\",\n// //       method: \"Post\",\n// //       data: {\n// //         name,\n// //         amount_invested,\n// //         price_at_purchase,\n// //         date_purchased,\n// //         tokens_owned,\n// //       },\n// //     }).then((res) => {\n// //       setCoins([...coins, res.data]);\n// //     });\n// //     console.log(\"handlesubmit\");\n// //   };\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","Form","name","setName","amount_invested","setAmountInvested","price_at_purchase","setPriceAtPurchase","date_purchased","setDatePurchased","tokens_owned","setTokensOwned","coins","setCoins","updateTokensOwned","event","target","value","updateDatePurchased","updatePriceAtPurchase","updateAmountInvested","updateName","handleSubmit","preventDefault","fetch","mode","method","headers","body","JSON","stringify","then","response","json","coin","console","log","data"],"sources":["/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n// import ShowPortfolio from \"./ShowPortfolio.js\";\n// import { tokens, setTokens } from \"./ShowPortfolio.js\";\n\nfunction Form() {\n  const [name, setName] = useState({ name: \"\" });\n  const [amount_invested, setAmountInvested] = useState({\n    amount_invested: \"\",\n  });\n  const [price_at_purchase, setPriceAtPurchase] = useState({\n    price_at_purchase: \"\",\n  });\n  const [date_purchased, setDatePurchased] = useState({ date_purchased: \"\" });\n  const [tokens_owned, setTokensOwned] = useState({ tokens_owned: \"\" });\n  const [coins, setCoins] = useState(\"\");\n  // const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = (event) => {\n    setTokensOwned({ tokens_owned: event.target.value });\n  };\n\n  const updateDatePurchased = (event) => {\n    setDatePurchased({ date_purchased: event.target.value });\n  };\n\n  const updatePriceAtPurchase = (event) => {\n    setPriceAtPurchase({ price_at_purchase: event.target.value });\n  };\n\n  const updateAmountInvested = (event) => {\n    setAmountInvested({ amount_invested: event.target.value });\n  };\n\n  const updateName = (event) => {\n    setName({ name: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application.json\",\n      },\n      body: JSON.stringify({\n        name,\n        amount_invested,\n        price_at_purchase,\n        date_purchased,\n        tokens_owned,\n      }),\n    })\n      .then((response) => response.json())\n      .then((coin) => {\n        console.log(\"after post request\", coin);\n        setCoins([...coins, coin.data]);\n        //   setTokens({ id: 0 });\n      }, []);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          name=\"name\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateName}\n          //   value={name}\n          placeholder=\"TokenName\"\n        />\n        <input\n          name=\"usdInvested\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateAmountInvested}\n          placeholder=\"USD Invested\"\n        />\n        <input\n          name=\"priceAtPurchase\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updatePriceAtPurchase}\n          placeholder=\"Price At Purchase\"\n        />\n        <input\n          name=\"tokenAmount\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateTokensOwned}\n          placeholder=\"Token Amount\"\n        />\n        <input\n          name=\"date\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateDatePurchased}\n          placeholder=\"MM-DD-YYYY\"\n        />\n        <input type=\"submit\" id=\"submit\" />\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n\n// // fetch(\"http://localhost:3000/api/crypto\", {\n// //   mode: \"cors\",\n// //   method: \"POST\",\n// //   headers: {\n// //     \"Content-Type\": \"application.json\",\n// //   },\n// //   body: JSON.stringify({ name }),\n// // })\n// //   .then((response) => response.json())\n// //   .then((token) => {\n// //     console.log(\"after post request\", token);\n// //     setToken([...tokens, token]);\n// //   });\n\n// //     axios({\n// //       url: \"http://localhost:3000/api/crypto\",\n// //       method: \"Post\",\n// //       data: {\n// //         name,\n// //         amount_invested,\n// //         price_at_purchase,\n// //         date_purchased,\n// //         tokens_owned,\n// //       },\n// //     }).then((res) => {\n// //       setCoins([...coins, res.data]);\n// //     });\n// //     console.log(\"handlesubmit\");\n// //   };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}