{"ast":null,"code":"var _jsxFileName = \"/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ShowPortfolio from \"./ShowPortfolio.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    tokens\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [amount_invested, setAmountInvested] = useState(\"\");\n  const [price_at_purchase, setPriceAtPurchase] = useState(\"\");\n  const [date_purchased, setDatePurchased] = useState(\"\");\n  const [tokens_owned, setTokensOwned] = useState(\"\");\n  const [coins, setCoins] = useState(\"\"); // const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = event => {\n    setTokensOwned(event.target.value);\n  };\n\n  const updateDatePurchased = event => {\n    setDatePurchased(event.target.value);\n  };\n\n  const updatePriceAtPurchase = event => {\n    setPriceAtPurchase(event.target.value);\n  };\n\n  const updateAmountInvested = event => {\n    setAmountInvested(event.target.value);\n  };\n\n  const updateName = event => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify({\n        name\n      })\n    }).then(response => response.json()).then(coin => {\n      console.log(\"after post request\", coin);\n      setCoins([...coins, coin]); // setForms(0);\n    }, [coins]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateName //   value={name}\n        ,\n        placeholder: \"TokenName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"usdInvested\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateAmountInvested,\n        placeholder: \"USD Invested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"priceAtPurchase\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updatePriceAtPurchase,\n        placeholder: \"Price At Purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"tokenAmount\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateTokensOwned,\n        placeholder: \"Token Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"date\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateDatePurchased,\n        placeholder: \"MM-DD-YYYY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"OiyIQkWHpJE3rBME0JX9A/E3bZM=\");\n\n_c = Form;\nexport default Form; // // fetch(\"http://localhost:3000/api/crypto\", {\n// //   mode: \"cors\",\n// //   method: \"POST\",\n// //   headers: {\n// //     \"Content-Type\": \"application.json\",\n// //   },\n// //   body: JSON.stringify({ name }),\n// // })\n// //   .then((response) => response.json())\n// //   .then((token) => {\n// //     console.log(\"after post request\", token);\n// //     setToken([...tokens, token]);\n// //   });\n// //     axios({\n// //       url: \"http://localhost:3000/api/crypto\",\n// //       method: \"Post\",\n// //       data: {\n// //         name,\n// //         amount_invested,\n// //         price_at_purchase,\n// //         date_purchased,\n// //         tokens_owned,\n// //       },\n// //     }).then((res) => {\n// //       setCoins([...coins, res.data]);\n// //     });\n// //     console.log(\"handlesubmit\");\n// //   };\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","ShowPortfolio","Form","tokens","name","setName","amount_invested","setAmountInvested","price_at_purchase","setPriceAtPurchase","date_purchased","setDatePurchased","tokens_owned","setTokensOwned","coins","setCoins","updateTokensOwned","event","target","value","updateDatePurchased","updatePriceAtPurchase","updateAmountInvested","updateName","handleSubmit","preventDefault","fetch","mode","method","headers","body","JSON","stringify","then","response","json","coin","console","log"],"sources":["/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ShowPortfolio from \"./ShowPortfolio.js\";\n\nfunction Form({ tokens }) {\n  const [name, setName] = useState(\"\");\n  const [amount_invested, setAmountInvested] = useState(\"\");\n  const [price_at_purchase, setPriceAtPurchase] = useState(\"\");\n  const [date_purchased, setDatePurchased] = useState(\"\");\n  const [tokens_owned, setTokensOwned] = useState(\"\");\n  const [coins, setCoins] = useState(\"\");\n  // const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = (event) => {\n    setTokensOwned(event.target.value);\n  };\n\n  const updateDatePurchased = (event) => {\n    setDatePurchased(event.target.value);\n  };\n\n  const updatePriceAtPurchase = (event) => {\n    setPriceAtPurchase(event.target.value);\n  };\n\n  const updateAmountInvested = (event) => {\n    setAmountInvested(event.target.value);\n  };\n\n  const updateName = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application.json\",\n      },\n      body: JSON.stringify({ name }),\n    })\n      .then((response) => response.json())\n      .then(\n        (coin) => {\n          console.log(\"after post request\", coin);\n          setCoins([...coins, coin]);\n          // setForms(0);\n        },\n        [coins]\n      );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          name=\"name\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateName}\n          //   value={name}\n          placeholder=\"TokenName\"\n        />\n        <input\n          name=\"usdInvested\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateAmountInvested}\n          placeholder=\"USD Invested\"\n        />\n        <input\n          name=\"priceAtPurchase\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updatePriceAtPurchase}\n          placeholder=\"Price At Purchase\"\n        />\n        <input\n          name=\"tokenAmount\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateTokensOwned}\n          placeholder=\"Token Amount\"\n        />\n        <input\n          name=\"date\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateDatePurchased}\n          placeholder=\"MM-DD-YYYY\"\n        />\n        <input type=\"submit\" id=\"submit\" />\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n\n// // fetch(\"http://localhost:3000/api/crypto\", {\n// //   mode: \"cors\",\n// //   method: \"POST\",\n// //   headers: {\n// //     \"Content-Type\": \"application.json\",\n// //   },\n// //   body: JSON.stringify({ name }),\n// // })\n// //   .then((response) => response.json())\n// //   .then((token) => {\n// //     console.log(\"after post request\", token);\n// //     setToken([...tokens, token]);\n// //   });\n\n// //     axios({\n// //       url: \"http://localhost:3000/api/crypto\",\n// //       method: \"Post\",\n// //       data: {\n// //         name,\n// //         amount_invested,\n// //         price_at_purchase,\n// //         date_purchased,\n// //         tokens_owned,\n// //       },\n// //     }).then((res) => {\n// //       setCoins([...coins, res.data]);\n// //     });\n// //     console.log(\"handlesubmit\");\n// //   };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}