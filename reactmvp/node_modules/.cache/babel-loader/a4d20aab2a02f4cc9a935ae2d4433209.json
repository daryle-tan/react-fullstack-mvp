{"ast":null,"code":"var _jsxFileName = \"/Users/daryletan/Desktop/Code/react-fullstack-mvp/reactmvp/src/components/ShowPortfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\"; // import Form from \"./Form.js\";\n\nimport { tokensState } from \"./state.js\";\nimport { useRecoilState } from \"recoil\";\nimport ReadOnly from \"./ReadOnly.js\";\nimport { Edit } from \"./Edit.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowPortfolio() {\n  _s();\n\n  const [investments, setInvestments] = useState([]);\n  const [tokens, setTokens] = useRecoilState(tokensState);\n  const [editInvestmentId, setEditInvestmentId] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    name: \"\",\n    amount_invested: \"\",\n    price_at_purchase: \"\",\n    date_purchased: \"\",\n    tokens_owned: \"\"\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\"\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setInvestments(data);\n      console.log(data);\n    });\n  }, [tokens]);\n\n  const deleteBtn = event => {\n    event.preventDefault();\n    let id = event.currentTarget.id;\n    fetch(`http://localhost:3000/api/crypto/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setInvestments({\n        id: 0\n      });\n      setTokens({\n        tokensState\n      });\n    });\n    console.log(tokens);\n  };\n\n  if (investments.id === 0) {\n    return null;\n  } // const handleEditClick = (event, investment) => {\n  //   event.preventDefault();\n  //   setEditInvestmentId(investment.id);\n  //   const formValues = {\n  //     name: investment.name,\n  //     amount_invested: investment.amount_invested,\n  //     price_at_purchase: investment.price_at_purchase,\n  //     tokens_owned: investment.tokens_owned,\n  //     date_purchased: investment.date_purchased,\n  //   };\n  //   setEditFormData(formValues);\n  // };\n  // const handleEditFormChange = (event) => {\n  //   event.preventDefault();\n  //   const fieldName = event.target.getAttribute(\"name\");\n  //   const fieldValue = event.target.value;\n  //   const newFormData = { ...editFormData };\n  //   newFormData[fieldName] = fieldValue;\n  //   setEditFormData(newFormData);\n  // };\n  // const handleEditFormSubmit = (event) => {\n  //   event.preventDefault();\n  //   const editedInvestment = {\n  //     name: editFormData.name,\n  //     amount_invested: editFormData.amount_invested,\n  //     price_at_purchase: editFormData.price_at_purchase,\n  //     tokens_owned: editFormData.tokens_owned,\n  //     date_purchased: editFormData.date_purchased,\n  //   };\n  //   const newInvestments = [...investments];\n  //   const index = investments.findIndex(\n  //     (investment) => investment.id === editInvestmentId\n  //   );\n  //   newInvestments[index] = editedInvestment;\n  //   setInvestments(newInvestments);\n  //   setEditInvestmentId(null);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        onSubmit: handleEditFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cyptocurrency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount Invested\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price at Purchase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Purchase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, \"id\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: investments.map(investment => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editInvestmentId === investment.id ? /*#__PURE__*/_jsxDEV(Edit, {\n              editFormData: editFormData // handleEditFormChange={handleEditFormChange}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnly, {\n              investment: investment // handleEditClick={handleEditClick}\n              ,\n              deleteBtn: deleteBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, \"token\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ShowPortfolio, \"i7pF7DQYYYHqn1wQfMeaJp1YVhM=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = ShowPortfolio;\nexport default ShowPortfolio; // <table key=\"name\">\n// <tbody>\n// <tr key={investment.id}>\n//   <td key=\"name\" value={investment.name}>\n//     {investment.name}\n//   </td>\n//   <td key=\"amountInvested\" value={investment.amount_invested}>\n//     {investment.amount_invested}\n//   </td>\n//   <td\n//     key=\"priceAtPurchase\"\n//     value={investment.price_at_purchase}\n//   >\n//     {investment.price_at_purchase}\n//   </td>\n//   <td key=\"amount\" value={investment.tokens_owned}>\n//     {investment.tokens_owned}\n//   </td>\n//   <td key=\"datePurchased\" value={investment.date_purchased}>\n//     {investment.date_purchased}\n//   </td>\n//   <td>\n//     <button\n//       id={investment.id}\n//       onClick={deleteBtn}\n//       className=\"deleteBtn\"\n//     >\n//       Delete\n//     </button>\n//   </td>\n// </tr>\n// </tbody>\n// </table>\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPortfolio\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","tokensState","useRecoilState","ReadOnly","Edit","ShowPortfolio","investments","setInvestments","tokens","setTokens","editInvestmentId","setEditInvestmentId","editFormData","setEditFormData","name","amount_invested","price_at_purchase","date_purchased","tokens_owned","fetch","mode","then","response","json","data","console","log","deleteBtn","event","preventDefault","id","currentTarget","method","handleEditFormSubmit","map","investment"],"sources":["/Users/daryletan/Desktop/Code/react-fullstack-mvp/reactmvp/src/components/ShowPortfolio.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\n// import Form from \"./Form.js\";\nimport { tokensState } from \"./state.js\";\nimport { useRecoilState } from \"recoil\";\nimport ReadOnly from \"./ReadOnly.js\";\nimport { Edit } from \"./Edit.js\";\n\nfunction ShowPortfolio() {\n  const [investments, setInvestments] = useState([]);\n  const [tokens, setTokens] = useRecoilState(tokensState);\n\n  const [editInvestmentId, setEditInvestmentId] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    name: \"\",\n    amount_invested: \"\",\n    price_at_purchase: \"\",\n    date_purchased: \"\",\n    tokens_owned: \"\",\n  });\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/crypto\", {\n      mode: \"cors\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setInvestments(data);\n        console.log(data);\n      });\n  }, [tokens]);\n\n  const deleteBtn = (event) => {\n    event.preventDefault();\n    let id = event.currentTarget.id;\n    fetch(`http://localhost:3000/api/crypto/${id}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      setInvestments({ id: 0 });\n      setTokens({ tokensState });\n    });\n    console.log(tokens);\n  };\n  if (investments.id === 0) {\n    return null;\n  }\n\n  // const handleEditClick = (event, investment) => {\n  //   event.preventDefault();\n  //   setEditInvestmentId(investment.id);\n  //   const formValues = {\n  //     name: investment.name,\n  //     amount_invested: investment.amount_invested,\n  //     price_at_purchase: investment.price_at_purchase,\n  //     tokens_owned: investment.tokens_owned,\n  //     date_purchased: investment.date_purchased,\n  //   };\n  //   setEditFormData(formValues);\n  // };\n\n  // const handleEditFormChange = (event) => {\n  //   event.preventDefault();\n  //   const fieldName = event.target.getAttribute(\"name\");\n  //   const fieldValue = event.target.value;\n\n  //   const newFormData = { ...editFormData };\n  //   newFormData[fieldName] = fieldValue;\n\n  //   setEditFormData(newFormData);\n  // };\n  // const handleEditFormSubmit = (event) => {\n  //   event.preventDefault();\n\n  //   const editedInvestment = {\n  //     name: editFormData.name,\n  //     amount_invested: editFormData.amount_invested,\n  //     price_at_purchase: editFormData.price_at_purchase,\n  //     tokens_owned: editFormData.tokens_owned,\n  //     date_purchased: editFormData.date_purchased,\n  //   };\n  //   const newInvestments = [...investments];\n  //   const index = investments.findIndex(\n  //     (investment) => investment.id === editInvestmentId\n  //   );\n\n  //   newInvestments[index] = editedInvestment;\n\n  //   setInvestments(newInvestments);\n  //   setEditInvestmentId(null);\n  // };\n\n  return (\n    <>\n      {/* <Form className=\"form\" /> */}\n      <div className=\"table\">\n        {/* <form className=\"form\"> */}\n        <table key=\"token\" onSubmit={handleEditFormSubmit}>\n          <thead>\n            <tr key=\"id\">\n              <th>Cyptocurrency</th>\n              <th>Amount Invested</th>\n              <th>Price at Purchase</th>\n              <th>Token Amount</th>\n              <th>Date of Purchase</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {investments.map((investment) => (\n              <Fragment>\n                {editInvestmentId === investment.id ? (\n                  <Edit\n                    editFormData={editFormData}\n                    // handleEditFormChange={handleEditFormChange}\n                  />\n                ) : (\n                  <ReadOnly\n                    investment={investment}\n                    // handleEditClick={handleEditClick}\n                    deleteBtn={deleteBtn}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n        {/* </form> */}\n      </div>\n    </>\n  );\n}\n\nexport default ShowPortfolio;\n\n// <table key=\"name\">\n// <tbody>\n// <tr key={investment.id}>\n//   <td key=\"name\" value={investment.name}>\n//     {investment.name}\n//   </td>\n//   <td key=\"amountInvested\" value={investment.amount_invested}>\n//     {investment.amount_invested}\n//   </td>\n//   <td\n//     key=\"priceAtPurchase\"\n//     value={investment.price_at_purchase}\n//   >\n//     {investment.price_at_purchase}\n//   </td>\n//   <td key=\"amount\" value={investment.tokens_owned}>\n//     {investment.tokens_owned}\n//   </td>\n//   <td key=\"datePurchased\" value={investment.date_purchased}>\n//     {investment.date_purchased}\n//   </td>\n//   <td>\n//     <button\n//       id={investment.id}\n//       onClick={deleteBtn}\n//       className=\"deleteBtn\"\n//     >\n//       Delete\n//     </button>\n//   </td>\n// </tr>\n// </tbody>\n// </table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}