{"ast":null,"code":"var _jsxFileName = \"/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { tokensState } from \"./state.js\";\nimport { useRecoilState } from \"recoil\"; // import ShowPortfolio, { tokens, setTokens } from \"./ShowPortfolio.js\";\n// import { tokens, setTokens } from \"./ShowPortfolio.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  //   const [name, setName] = useRecoilState(tokensState);\n  //   const [amount_invested, setAmountInvested] = useRecoilState(tokensState);\n  //   const [price_at_purchase, setPriceAtPurchase] = useRecoilState(tokensState);\n  //   const [date_purchased, setDatePurchased] = useRecoilState(tokensState);\n  //   const [tokens_owned, setTokensOwned] = useRecoilState(tokensState);\n  const [coins, setCoins] = useRecoilState(tokensState); // const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = event => {\n    setTokensOwned(event.target.value);\n  };\n\n  const updateDatePurchased = event => {\n    setDatePurchased(event.target.value);\n  };\n\n  const updatePriceAtPurchase = event => {\n    setPriceAtPurchase(event.target.value);\n  };\n\n  const updateAmountInvested = event => {\n    setAmountInvested(event.target.value);\n  };\n\n  const updateName = event => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios({\n      url: \"http://localhost:3000/api/crypto\",\n      method: \"Post\",\n      data: {\n        name,\n        amount_invested,\n        price_at_purchase,\n        date_purchased,\n        tokens_owned\n      }\n    }).then(res => {\n      setCoins([...coins, res.data]);\n    });\n    console.log(\"handlesubmit\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateName //   value={name}\n        ,\n        placeholder: \"TokenName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"usdInvested\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateAmountInvested,\n        placeholder: \"USD Invested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"priceAtPurchase\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updatePriceAtPurchase,\n        placeholder: \"Price At Purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"tokenAmount\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateTokensOwned,\n        placeholder: \"Token Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"date\",\n        type: \"text\",\n        className: \"crypto\",\n        onChange: updateDatePurchased,\n        placeholder: \"MM-DD-YYYY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"isK972kUUr7E2vEHVIr0695+i5c=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Form;\nexport default Form; // // fetch(\"http://localhost:3000/api/crypto\", {\n// //   mode: \"cors\",\n// //   method: \"POST\",\n// //   headers: {\n// //     \"Content-Type\": \"application.json\",\n// //   },\n// //   body: JSON.stringify({ name }),\n// // })\n// //   .then((response) => response.json())\n// //   .then((token) => {\n// //     console.log(\"after post request\", token);\n// //     setToken([...tokens, token]);\n// //   });\n// axios({\n//   url: \"http://localhost:3000/api/crypto\",\n//   method: \"Post\",\n//   data: {\n//     name,\n//     amount_invested,\n//     price_at_purchase,\n//     date_purchased,\n//     tokens_owned,\n//   },\n// }).then((res) => {\n//   setCoins([...coins, res.data]);\n// });\n// console.log(\"handlesubmit\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","tokensState","useRecoilState","Form","coins","setCoins","updateTokensOwned","event","setTokensOwned","target","value","updateDatePurchased","setDatePurchased","updatePriceAtPurchase","setPriceAtPurchase","updateAmountInvested","setAmountInvested","updateName","setName","handleSubmit","preventDefault","url","method","data","name","amount_invested","price_at_purchase","date_purchased","tokens_owned","then","res","console","log"],"sources":["/Users/daryletan/Desktop/Code/reactmvp/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { tokensState } from \"./state.js\";\nimport { useRecoilState } from \"recoil\";\n// import ShowPortfolio, { tokens, setTokens } from \"./ShowPortfolio.js\";\n// import { tokens, setTokens } from \"./ShowPortfolio.js\";\n\nfunction Form() {\n  //   const [name, setName] = useRecoilState(tokensState);\n  //   const [amount_invested, setAmountInvested] = useRecoilState(tokensState);\n  //   const [price_at_purchase, setPriceAtPurchase] = useRecoilState(tokensState);\n  //   const [date_purchased, setDatePurchased] = useRecoilState(tokensState);\n  //   const [tokens_owned, setTokensOwned] = useRecoilState(tokensState);\n  const [coins, setCoins] = useRecoilState(tokensState);\n  // const [forms, setForms] = useState(\"\");\n\n  const updateTokensOwned = (event) => {\n    setTokensOwned(event.target.value);\n  };\n\n  const updateDatePurchased = (event) => {\n    setDatePurchased(event.target.value);\n  };\n\n  const updatePriceAtPurchase = (event) => {\n    setPriceAtPurchase(event.target.value);\n  };\n\n  const updateAmountInvested = (event) => {\n    setAmountInvested(event.target.value);\n  };\n\n  const updateName = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    axios({\n      url: \"http://localhost:3000/api/crypto\",\n      method: \"Post\",\n      data: {\n        name,\n        amount_invested,\n        price_at_purchase,\n        date_purchased,\n        tokens_owned,\n      },\n    }).then((res) => {\n      setCoins([...coins, res.data]);\n    });\n    console.log(\"handlesubmit\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          name=\"name\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateName}\n          //   value={name}\n          placeholder=\"TokenName\"\n        />\n        <input\n          name=\"usdInvested\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateAmountInvested}\n          placeholder=\"USD Invested\"\n        />\n        <input\n          name=\"priceAtPurchase\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updatePriceAtPurchase}\n          placeholder=\"Price At Purchase\"\n        />\n        <input\n          name=\"tokenAmount\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateTokensOwned}\n          placeholder=\"Token Amount\"\n        />\n        <input\n          name=\"date\"\n          type=\"text\"\n          className=\"crypto\"\n          onChange={updateDatePurchased}\n          placeholder=\"MM-DD-YYYY\"\n        />\n        <input type=\"submit\" id=\"submit\" />\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n\n// // fetch(\"http://localhost:3000/api/crypto\", {\n// //   mode: \"cors\",\n// //   method: \"POST\",\n// //   headers: {\n// //     \"Content-Type\": \"application.json\",\n// //   },\n// //   body: JSON.stringify({ name }),\n// // })\n// //   .then((response) => response.json())\n// //   .then((token) => {\n// //     console.log(\"after post request\", token);\n// //     setToken([...tokens, token]);\n// //   });\n\n// axios({\n//   url: \"http://localhost:3000/api/crypto\",\n//   method: \"Post\",\n//   data: {\n//     name,\n//     amount_invested,\n//     price_at_purchase,\n//     date_purchased,\n//     tokens_owned,\n//   },\n// }).then((res) => {\n//   setCoins([...coins, res.data]);\n// });\n// console.log(\"handlesubmit\");\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}